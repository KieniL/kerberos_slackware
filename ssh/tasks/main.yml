---
# tasks file for ssh
- name: download ssh
  get_url:
    # url: https://slackware.osuosl.org/slackware-14.1/patches/source/openssh/openssh-7.4p1.tar.gz
    # url: https://slackbuilds.org/slackbuilds/14.1/network/openssh-krb5.tar.gz
    url: https://mirrors.xmission.com/slackware/slackware-13.1/source/n/openssh/openssh-5.5p1.tar.gz
    dest: ./ssh.tar.gz
  delegate_to: 127.0.0.1

- name: download openssl
  get_url:
    url: https://ftp.openssl.org/source/old/1.0.2/openssl-1.0.2.tar.gz
    dest: ./openssl.tar.gz
  delegate_to: 127.0.0.1

- name: download linux-pam
  get_url:
    url: http://www.linux-pam.org/library/Linux-PAM-1.1.2.tar.gz
    dest: ./linux-pam.tar.gz
  delegate_to: 127.0.0.1

- name: download cyrus-sasl
  get_url:
    url: https://mirrors.xmission.com/slackware/slackware-13.1/source/n/cyrus-sasl/cyrus-sasl-2.1.23.tar.xz
    dest: ./cyrus-sasl.tar.xz
  delegate_to: 127.0.0.1

- name: download shadow
  get_url:
    url: https://mirrors.xmission.com/slackware/slackware-13.1/source/a/shadow/shadow-4.1.4.2.tar.xz
    dest: ./shadow.tar.xz
  delegate_to: 127.0.0.1

- name: download pam-krb5
  get_url:
    url: https://archives.eyrie.org/software/kerberos/pam-krb5-4.10.tar.gz
    dest: ./pam-krb5.tar.gz
  delegate_to: 127.0.0.1


- name: unzip the cyrus-sasl.tar.xz to get the tar
  command: xz -d ./cyrus-sasl.tar.xz
  delegate_to: 127.0.0.1
  ignore_errors: true

- name: unzip the shadow.tar.xz to get the tar
  command: xz -d ./shadow.tar.xz
  delegate_to: 127.0.0.1
  ignore_errors: true

- name: copy pam-krb5.tar to remote machine
  copy:
    src: ./pam-krb5.tar.gz
    dest: /root/pam-krb5.tar.gz
    owner: root
    group: root
    mode: 0644

- name: copy ssh.tar to remote machine
  copy:
    src: ./ssh.tar.gz
    dest: /root/ssh.tar.gz
    owner: root
    group: root
    mode: 0644

- name: copy openssl.tar to remote machine
  copy:
    src: ./openssl.tar.gz
    dest: /root/openssl.tar.gz
    owner: root
    group: root
    mode: 0644

- name: copy linux-pam.tar to remote machine
  copy:
    src: ./linux-pam.tar.gz
    dest: /root/linux-pam.tar.gz
    owner: root
    group: root
    mode: 0644

- name: copy cyrus-sasl.tar.xz to remote machine
  copy:
    src: ./cyrus-sasl.tar
    dest: /root/cyrus-sasl.tar
    owner: root
    group: root
    mode: 0644

- name: copy shadow.tar to remote machine
  copy:
    src: ./shadow.tar
    dest: /root/shadow.tar
    owner: root
    group: root
    mode: 0644

- name: Create the pam-krb5 directory if it does not exist
  file:
    path: /root/pam-krb5
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create the ssh directory if it does not exist
  file:
    path: /root/ssh
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create the openssl directory if it does not exist
  file:
    path: /root/openssl
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create the linux-pam directory if it does not exist
  file:
    path: /root/linux-pam
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create the cyrus-sasl directory if it does not exist
  file:
    path: /root/cyrus-sasl
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Create the shadow directory if it does not exist
  file:
    path: /root/shadow
    state: directory
    mode: '0755'
    owner: root
    group: root



- name: unzip pam-krb5 tar
  unarchive:
    src: /root/pam-krb5.tar.gz
    dest: /root/pam-krb5
    remote_src: true

- name: unzip shadow tar
  unarchive:
    src: /root/shadow.tar
    dest: /root/shadow
    remote_src: true


- name: unzip cyrus-sasl tar
  unarchive:
    src: /root/cyrus-sasl.tar
    dest: /root/cyrus-sasl
    remote_src: true

- name: unzip ssh tar
  unarchive:
    src: /root/ssh.tar.gz
    dest: /root/ssh
    remote_src: true

- name: unzip openssl tar
  unarchive:
    src: /root/openssl.tar.gz
    dest: /root/openssl
    remote_src: true

- name: unzip linux-pam tar
  unarchive:
    src: /root/linux-pam.tar.gz
    dest: /root/linux-pam
    remote_src: true

- name: configure the pam source
  command: chdir=/root/linux-pam/Linux-PAM-1.1.2/ ./configure --libdir=/lib --disable-static --enable-shared

- name: make the pam source
  command: chdir=/root/linux-pam/Linux-PAM-1.1.2/ make

- name: make install the pam source
  command: chdir=/root/linux-pam/Linux-PAM-1.1.2/ make install

- name: configure the shadow source
  command: chdir=/root/shadow/shadow-4.1.4.2/ ./configure --prefix=/ --with-libpam --sysconfdir=/etc --mandir=/usr/man   --docdir=/usr/doc/shadow-4.1.4.2 --disable-shared--without-libcrack --build=i686-slackware-linux

- name: make the shadow source
  command: chdir=/root/shadow/shadow-4.1.4.2/ make

- name: make install the shadow source
  command: chdir=/root/shadow/shadow-4.1.4.2/ make install

- name: configure the cyrus-sasl source
  command: chdir=/root/cyrus-sasl/cyrus-sasl-2.1.23/ ./configure --enable-anon --enable-pam --enable-plain --enable-login \
    --enable-sql --disable-krb4 --disable-otp --disable-cram --disable-digest \
    --with-pam=/usr/include/security \
    --with-pwcheck=/var/state/saslauthd --with-openssl=/usr/local/ssl/ \
    --with-dblib=berkeley --with-plugindir=/usr/local/lib/sasl2 --with-bdblibdir=/usr/local/berkeley/lib \
    --with-bdb-incdir=/usr/local/berkeley/include \
    --with-dbpath=/var/lib/sasl/sasldb2 \
    --with-saslauthd=/var/state/saslauthd --with-gss_impl=mit --without-des

- name: make the cyrus-sasl source
  command: chdir=/root/cyrus-sasl/cyrus-sasl-2.1.23/ make

- name: make install the cyrus-sasl source
  command: chdir=/root/cyrus-sasl/cyrus-sasl-2.1.23/ make install

- name: configure the openssl source
  command: chdir=/root/openssl/openssl-1.0.2/ ./config

- name: make the openssl source
  command: chdir=/root/openssl/openssl-1.0.2/ make

- name: make install the openssl source
  command: chdir=/root/openssl/openssl-1.0.2/ make install

- name: configure the ssh source
  command: chdir=/root/ssh/openssh-5.5p1/ ./configure --with-kerberos5=/usr/kerberos --enable-kerberos-tgt-passing --mandir=/usr/man --sysconfdir=/etc/ssh --with-pam --with-md5-passwords --with-tcp-wrappers --with-default-path=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin --with-privsep-path=/var/empty --with-privsep-user=sshd --build=i686-slackware-linux

- name: make the ssh source
  command: chdir=/root/ssh/openssh-5.5p1/ make

- name: make install the ssh source
  command: chdir=/root/ssh/openssh-5.5p1/ make install

- name: configure the pam-krb5 source
  command: chdir=/root/pam-krb5/pam-krb5-4.10/ ./configure --prefix=/usr --libdir=/lib

- name: make the pam-krb5 source
  command: chdir=/root/pam-krb5/pam-krb5-4.10/ make

- name: make install the pam-krb5 source
  command: chdir=/root/pam-krb5/pam-krb5-4.10/ make install


# - name: add the gssapi authentiction to local sshd_config 
#   lineinfile:
#     dest: /usr/local/etc/sshd_config
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#   loop:
#     - { regexp: '^#GSSAPIAuthentication no', line: 'GSSAPIAuthentication yes' }
#     - { regexp: '^#GSSAPICleanupCredentials yes', line: 'GSSAPICleanupCredentials yes' }
#     - { regexp: '^#UsePAM no', line: 'UsePAM yes' }

- name: add the gssapi authentiction to etc sshd_config 
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^#GSSAPIAuthentication no', line: 'GSSAPIAuthentication yes' }
    - { regexp: '^#GSSAPICleanupCredentials yes', line: 'GSSAPICleanupCredentials yes' }
    - { regexp: '^#UsePAM no', line: 'UsePAM yes' }


- name: run ssh with sshd_config
  command: /usr/local/sbin/sshd -t -f /etc/ssh/sshd_config


- name: copy the new sshd
  copy:
    src: /usr/local/sbin/sshd
    dest: /usr/sbin/sshd
    owner: root
    group: root
    mode: 0755
    remote_src: true

- name: copy the new ssh-keygen
  copy:
    src: /usr/local/bin/ssh-keygen
    dest: /usr/bin/ssh-keygen
    owner: root
    group: root
    mode: 0755
    remote_src: true

- name: comment out faillog in login.defs 
  lineinfile:
    dest: /etc/login.defs
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^FAILLOG_ENAB		yes', line: '#FAILLOG_ENAB		yes' }
    - { regexp: '^LASTLOG_ENAB		yes', line: '#LASTLOG_ENAB		yes' }
    - { regexp: '^MAIL_CHECK_ENAB     yes', line: '#MAIL_CHECK_ENAB     yes' }
    - { regexp: '^OBSCURE_CHECKS_ENAB yes', line: '#OBSCURE_CHECKS_ENAB yes' }
    - { regexp: '^PORTTIME_CHECKS_ENAB    yes', line: '#PORTTIME_CHECKS_ENAB    yes' }
    - { regexp: '^QUOTAS_ENAB     yes', line: '#QUOTAS_ENAB     yes' }
    - { regexp: '^MOTD_FILE   /etc/motd', line: '#MOTD_FILE   /etc/motd' }
    - { regexp: '^FTMP_FILE   /var/log/btmp', line: '#FTMP_FILE   /var/log/btmp' }
    - { regexp: '^NOLOGINS_FILE   /etc/nologin', line: '#NOLOGINS_FILE   /etc/nologin' }
    - { regexp: '^ENV_HZ      HZ=100', line: '#ENV_HZ      HZ=100' }
    - { regexp: '^PASS_MIN_LEN    5', line: '#PASS_MIN_LEN    5' }
    - { regexp: '^SU_WHEEL_ONLY   no', line: '#SU_WHEEL_ONLY   no' }
    - { regexp: '^CRACKLIB_DICTPATH  /var/cache/cracklib/cracklib_dict', line: '#CRACKLIB_DICTPATH  /var/cache/cracklib/cracklib_dict' }
    - { regexp: '^PASS_CHANGE_TRIES  5', line: '#PASS_CHANGE_TRIES  5' }
    - { regexp: '^PASS_ALWAYS_WARN    yes', line: '#PASS_ALWAYS_WARN    yes' }
    - { regexp: '^CHFN_AUTH       yes', line: '#CHFN_AUTH       yes' }
    - { regexp: '^ENVIRON_FILE    /etc/environment', line: '#ENVIRON_FILE    /etc/environment' }


- name: Create the /etc/pam.d/other file if it does not exist
  file:
    path: /etc/pam.d/other
    state: touch
    mode: 0644
    owner: root
    group: root

- name: copy the common-auth file
  copy:
    src: "{{ role_path }}/files/common-auth"
    dest: /etc/pam.d/common-auth
    mode: 0644

# vi /etc/pam.d/common-account
- name: copy the common-account file
  copy:
    src: "{{ role_path }}/files/common-account"
    dest: /etc/pam.d/common-account
    mode: 0644

# vi /etc/pam.d/common-password
- name: copy the common-password file
  copy:
    src: "{{ role_path }}/files/common-password"
    dest: /etc/pam.d/common-password
    mode: 0644


# vi /etc/pam.d/common-session
- name: copy the common-session file
  copy:
    src: "{{ role_path }}/files/common-session"
    dest: /etc/pam.d/common-session
    mode: 0644

# vi /etc/pam.d/common-passwd
- name: copy the common-passwd file
  copy:
    src: "{{ role_path }}/files/passwd"
    dest: /etc/pam.d/passwd
    mode: 0644


# vi /etc/pam.d/su
- name: copy the common-su file
  copy:
    src: "{{ role_path }}/files/su"
    dest: /etc/pam.d/su
    mode: 0644 


# vi /etc/pam.d/login
- name: copy the common-auth file
  copy:
    src: "{{ role_path }}/files/login"
    dest: /etc/pam.d/login
    mode: 0644

- name: copy the login to sshd file
  copy:
    src: /etc/pam.d/login
    dest: /etc/pam.d/sshd
    mode: 0644
    remote_src: yes



- name: Add the user "{{kerberos_principal_name}}" with a specific uid and a primary group of 'users'
  user:
    name: "{{kerberos_principal_name}}"
    password: "{{ kerberos_principal_password | password_hash('sha512') }}"
    comment: "{{kerberos_principal_name}}"
    uid: 1040
    group: users

- name: restart ssh
  command: /etc/rc.d/rc.sshd restart

- name: Reboot immediately
  shell: "reboot"
  async: 1
  poll: 0

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 20
    timeout: 300

# - name: run the SlackBuild
#   command: chdir=/root/ssh/openssh-krb5/ sh openssh-krb5.SlackBuild

# - name: Create the openssh-krb5 directory if it does not exist
#   file:
#     path: /root/openssh-krb5
#     state: directory
#     mode: '0755'
#     owner: root
#     group: root

# - name: unzip openssh-krb5 tar
#   unarchive:
#     src: /tmp/openssh-krb5-6.7p1-i486-1_SBo.tgz
#     dest: /root/openssh-krb5
#     remote_src: true

  # /usr/local/sbin/sshd -t -f /usr/local/etc/sshd_config
